@page "/product"
@page "/product/{id:guid}"
@inject HttpClient httpClient
@inject NavigationManager navigator
<div class="card">
    <EditForm Model="@product" OnValidSubmit="@OnSumbited">
        <div class="card-header">
            <div class="col-6">
                <button class="btn btn-primary " type="submit"> Submit</button>
                <a href="products" type="button" class="btn btn-info">
                    List
                </a>
            </div>

        </div>
        <div class="card-body">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="row">
                <div class="col-xxl-6 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 ">
                    <div class="form-floating mb-3">
                        <InputText placeholder="Name" class="form-control" @bind-Value="product.Name"></InputText>
                        <label for="Name">Name</label>
                        <ValidationMessage For="()=>product.Name"></ValidationMessage>
                    </div>
                </div>
                <div class="col-xxl-3 col-xl-3 col-lg-3 col-md-12 col-sm-12 col-12 ">
                    <div class="form-floating mb-3">
                        <InputText placeholder="Code" class="form-control" @bind-Value="product.Code"></InputText>
                        <label for="Code">Code</label>
                        <ValidationMessage For="()=>product.Code"></ValidationMessage>
                    </div>
                </div>
                <div class="col-xxl-3 col-xl-3 col-lg-3 col-md-12 col-sm-12 col-12 ">
                    <div class="form-floating mb-3">
                        <InputText placeholder="Unit" class="form-control" @bind-Value="product.Unit"></InputText>
                        <label for="Unit">Unit</label>
                        <ValidationMessage For="()=>product.Unit"></ValidationMessage>
                    </div>
                </div>
                <div class="col-xxl-12 col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 ">
                    <div class="form-floating mb-3">
                        <InputTextArea placeholder="Description" class="form-control" @bind-Value="product.Description"></InputTextArea>
                        <label for="Description">Description</label>
                        <ValidationMessage For="()=>product.Description"></ValidationMessage>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer"></div>
    </EditForm>
</div>
@code {
    [Parameter]
    public Guid id { get; set; }

    public Product product { get; set; } = new Product();

    protected override async Task OnInitializedAsync()
    {
        if (id != Guid.Empty)
        {
            var prod = await httpClient.GetFromJsonAsync<Product>($"/api/Product/{id}");
            if (prod != null)
            {
                product = prod;
            }
        }
    }

    protected async Task OnSumbited()
    {
        if (id != Guid.Empty)
        {
            var res = await httpClient.PutAsJsonAsync<Product>($"/api/Product/{id}", product);
            if (res != null)
            {
                if (res.IsSuccessStatusCode)
                {
                    toaster.ShowToaster("Saved Successfully", ToastLevel.Success);
                    navigator.NavigateTo("/products");
                }
            }
        }
        else
        {
            var res = await httpClient.PostAsJsonAsync<Product>("/api/Product", product);
            if (res != null)
            {
                if (res.IsSuccessStatusCode)
                {
                    toaster.ShowToaster("Saved Successfully", ToastLevel.Success);
                    navigator.NavigateTo("/products");
                }
            }
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SavuDiary.Server.DataLayers;

#nullable disable

namespace SavuDiary.Server.Migrations
{
    [DbContext(typeof(SavuDiaryDBContext))]
    partial class SavuDiaryDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SavuDiary.Server.DataLayers.CustomerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("SequenceNo")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SavuDiary.Server.DataLayers.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SavuDiary.Server.DataLayers.PurchaseDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PurchaseId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("PurchaseDetails");
                });

            modelBuilder.Entity("SavuDiary.Server.DataLayers.PurchaseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PurchaseNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PurchaseNo"));

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("SavuDiary.Server.DataLayers.SaleDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<Guid>("SaleId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("SaleDetails");
                });

            modelBuilder.Entity("SavuDiary.Server.DataLayers.SaleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReturn")
                        .HasColumnType("boolean");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ReturnReasons")
                        .HasColumnType("boolean");

                    b.Property<decimal>("SaleAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("SaleDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("SaleNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("SaleNo"));

                    b.HasKey("Id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("SavuDiary.Server.DataLayers.StockMangementEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BatchCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("InQuantity")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<decimal>("OutQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("RecordDetailId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<string>("UniqueIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StockMangement");
                });

            modelBuilder.Entity("SavuDiary.Server.DataLayers.SupplierEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("SavuDiary.Server.DataLayers.TaxRecordDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Dated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordDetailId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uuid");

                    b.Property<long>("RecordNo")
                        .HasColumnType("bigint");

                    b.Property<string>("RecordTypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("TaxId")
                        .HasColumnType("uuid");

                    b.Property<string>("TaxName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TaxPercenatage")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("TaxRecordDetail");
                });

            modelBuilder.Entity("SavuDiary.Server.DataLayers.TaxRuleDetailsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descriptions")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PerticularNames")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TaxPercentage")
                        .HasColumnType("numeric");

                    b.Property<Guid>("TaxRuleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TaxRuleId");

                    b.ToTable("TaxRuleDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("046d1252-e445-4a54-95a5-6509e16be04e"),
                            Descriptions = "CGST",
                            IsActive = true,
                            PerticularNames = "CGST",
                            TaxPercentage = 2.5m,
                            TaxRuleId = new Guid("e5b7ff14-7cb1-4956-9e0e-b98e74fc593c")
                        },
                        new
                        {
                            Id = new Guid("ff4061c1-6789-4608-a5a7-231e85750342"),
                            Descriptions = "SGST",
                            IsActive = true,
                            PerticularNames = "SGST",
                            TaxPercentage = 2.5m,
                            TaxRuleId = new Guid("e5b7ff14-7cb1-4956-9e0e-b98e74fc593c")
                        },
                        new
                        {
                            Id = new Guid("7a62a5e0-3d03-4265-9d83-15c93b275cbd"),
                            Descriptions = "IGST",
                            IsActive = true,
                            PerticularNames = "IGST",
                            TaxPercentage = 2.5m,
                            TaxRuleId = new Guid("e5b7ff14-7cb1-4956-9e0e-b98e74fc593c")
                        },
                        new
                        {
                            Id = new Guid("49db3a14-b001-40c7-9935-7bee1d59f856"),
                            Descriptions = "CGST",
                            IsActive = true,
                            PerticularNames = "CGST",
                            TaxPercentage = 6m,
                            TaxRuleId = new Guid("b53d0455-197e-465e-aa18-d20eeaae8415")
                        },
                        new
                        {
                            Id = new Guid("9ff082b3-5c51-43fb-8eba-ec9b61734a2f"),
                            Descriptions = "SGST",
                            IsActive = true,
                            PerticularNames = "SGST",
                            TaxPercentage = 6m,
                            TaxRuleId = new Guid("b53d0455-197e-465e-aa18-d20eeaae8415")
                        },
                        new
                        {
                            Id = new Guid("f253ba7c-e982-4537-9cd8-ce6791c4f13d"),
                            Descriptions = "IGST",
                            IsActive = true,
                            PerticularNames = "IGST",
                            TaxPercentage = 6m,
                            TaxRuleId = new Guid("b53d0455-197e-465e-aa18-d20eeaae8415")
                        },
                        new
                        {
                            Id = new Guid("2f3cf2c9-ea9f-4ea9-b118-c28bb1896afd"),
                            Descriptions = "CGST",
                            IsActive = true,
                            PerticularNames = "CGST",
                            TaxPercentage = 9m,
                            TaxRuleId = new Guid("29869748-e7be-4570-9baf-28281fdcedd9")
                        },
                        new
                        {
                            Id = new Guid("a36c3222-3580-4970-adfb-64272e00145c"),
                            Descriptions = "SGST",
                            IsActive = true,
                            PerticularNames = "SGST",
                            TaxPercentage = 9m,
                            TaxRuleId = new Guid("29869748-e7be-4570-9baf-28281fdcedd9")
                        },
                        new
                        {
                            Id = new Guid("882ad2e7-7e86-471f-8f96-ac795fb7e677"),
                            Descriptions = "IGST",
                            IsActive = true,
                            PerticularNames = "IGST",
                            TaxPercentage = 9m,
                            TaxRuleId = new Guid("29869748-e7be-4570-9baf-28281fdcedd9")
                        },
                        new
                        {
                            Id = new Guid("dd1b0a98-13e3-4bad-953c-06eccfb8dab4"),
                            Descriptions = "CGST",
                            IsActive = true,
                            PerticularNames = "CGST",
                            TaxPercentage = 14m,
                            TaxRuleId = new Guid("260c617b-822d-4c87-a079-82e5cc30e899")
                        },
                        new
                        {
                            Id = new Guid("e9786033-56df-4343-8d1b-82996b3b8c88"),
                            Descriptions = "SGST",
                            IsActive = true,
                            PerticularNames = "SGST",
                            TaxPercentage = 14m,
                            TaxRuleId = new Guid("260c617b-822d-4c87-a079-82e5cc30e899")
                        },
                        new
                        {
                            Id = new Guid("fac7957f-f490-4e21-9889-0892664b8e5d"),
                            Descriptions = "IGST",
                            IsActive = true,
                            PerticularNames = "IGST",
                            TaxPercentage = 14m,
                            TaxRuleId = new Guid("260c617b-822d-4c87-a079-82e5cc30e899")
                        });
                });

            modelBuilder.Entity("SavuDiary.Server.DataLayers.TaxRulesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descriptions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TaxPercentage")
                        .HasColumnType("numeric");

                    b.Property<string>("TaxType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TaxRules");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bcef795a-159f-40dc-a906-bd022c7a3070"),
                            Descriptions = "TaxFree",
                            IsActive = true,
                            RuleName = "FREE",
                            TaxPercentage = 0m,
                            TaxType = "0"
                        },
                        new
                        {
                            Id = new Guid("e5b7ff14-7cb1-4956-9e0e-b98e74fc593c"),
                            Descriptions = "5",
                            IsActive = true,
                            RuleName = "5",
                            TaxPercentage = 5m,
                            TaxType = "5"
                        },
                        new
                        {
                            Id = new Guid("b53d0455-197e-465e-aa18-d20eeaae8415"),
                            Descriptions = "12",
                            IsActive = true,
                            RuleName = "12",
                            TaxPercentage = 12m,
                            TaxType = "12"
                        },
                        new
                        {
                            Id = new Guid("29869748-e7be-4570-9baf-28281fdcedd9"),
                            Descriptions = "18",
                            IsActive = true,
                            RuleName = "18",
                            TaxPercentage = 18m,
                            TaxType = "18"
                        },
                        new
                        {
                            Id = new Guid("260c617b-822d-4c87-a079-82e5cc30e899"),
                            Descriptions = "28",
                            IsActive = true,
                            RuleName = "28",
                            TaxPercentage = 28m,
                            TaxType = "28"
                        });
                });

            modelBuilder.Entity("SavuDiary.Server.DataLayers.TemplateEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ApplicableDatetime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Template");
                });

            modelBuilder.Entity("SavuDiary.Server.DataLayers.TaxRuleDetailsEntity", b =>
                {
                    b.HasOne("SavuDiary.Server.DataLayers.TaxRulesEntity", "TaxRule")
                        .WithMany()
                        .HasForeignKey("TaxRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxRule");
                });
#pragma warning restore 612, 618
        }
    }
}
